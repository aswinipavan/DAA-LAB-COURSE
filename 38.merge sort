#include <stdio.h>
#include <stdlib.h>

int main() {

    int arr[] = {38, 27, 43, 3, 9, 82, 10};
    int n = sizeof(arr) / sizeof(arr[0]);

    
    int *L = (int*)malloc(n * sizeof(int));
    int *R = (int*)malloc(n * sizeof(int));
    
    int left, mid, right, i, j, k;

    
    for (int size = 1; size < n; size *= 2) {
        for (left = 0; left < n - size; left += 2 * size) {
            mid = left + size - 1;
            right = (left + 2 * size - 1 < n) ? left + 2 * size - 1 : n - 1;

            int n1 = mid - left + 1;
            int n2 = right - mid;

            
            for (i = 0; i < n1; i++)
                L[i] = arr[left + i];
            for (j = 0; j < n2; j++)
                R[j] = arr[mid + 1 + j];

            i = 0; 
            j = 0; 
            k = left; 

            while (i < n1 && j < n2) {
                if (L[i] <= R[j]) {
                    arr[k] = L[i];
                    i++;
                } else {
                    arr[k] = R[j];
                    j++;
                }
                k++;
            }

            while (i < n1) {
                arr[k] = L[i];
                i++;
                k++;
            }

            while (j < n2) {
                arr[k] = R[j];
                j++;
                k++;
            }
        }
    }

    free(L);
    free(R);

    printf("Sorted array:\n");
    for (int i = 0; i < n; i++) {
        printf("%d ", arr[i]);
    }
    printf("\n");

    return 0;
}
